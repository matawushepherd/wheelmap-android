Properties module_properties = new Properties()
module_properties.load(new FileInputStream("$project.rootDir/app/module.properties"))

apply plugin: 'com.android.application'
apply plugin: 'de.timfreiheit.buildtypelaunchericon.plugin'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'

        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'

        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    defaultConfig {
        applicationId "org.wheelmap.android.online"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        minSdkVersion 15
        targetSdkVersion 22
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        versionCode Integer.valueOf(module_properties.getProperty("app_version_code"))
        versionName "3.1.1"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false

    }

    dataBinding {
        enabled true
    }

    buildTypes {

        debug {
            debuggable true
            applicationIdSuffix ".debug"
            buildConfigField "String", "HOCKEY_APP_ID", "null"
            buildConfigField "String", "API_BASE_URL", "\"https://staging.wheelmap.org\""
            buildConfigField "String", "WHEELMAP_API_KEY", WHEELMAP_STAGING_API_KEY
            buildConfigField "String", "MAPBOX_API_KEY", MAPBOX_API_KEY
            buildConfigField "String", "ANALYTICS_TRACKING_ID", "\"\""
        }

        alpha {
            initWith(buildTypes.debug)
            signingConfig android.signingConfigs.debug
            applicationIdSuffix ".stagingdev"
            buildConfigField "String", "HOCKEY_APP_ID", "\"" + module_properties.getProperty("HOCKEY_APP_ID_ALPHA") + "\""
            buildConfigField "String", "ANALYTICS_TRACKING_ID", "\"\""
        }

        beta {
            initWith(buildTypes.debug)
            signingConfig android.signingConfigs.debug
            applicationIdSuffix ".staging"
            buildConfigField "String", "HOCKEY_APP_ID", "\"" + module_properties.getProperty("HOCKEY_APP_ID_BETA") + "\""
            buildConfigField "String", "ANALYTICS_TRACKING_ID", ANALYTICS_TRACKING_ID_DEVELOPMENT
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HOCKEY_APP_ID", "\"" + module_properties.getProperty("HOCKEY_APP_ID_RELEASE") + "\""
            buildConfigField "String", "API_BASE_URL", "\"https://wheelmap.org\""
            buildConfigField "String", "WHEELMAP_API_KEY", WHEELMAP_API_KEY
            buildConfigField "String", "MAPBOX_API_KEY", MAPBOX_API_KEY
            buildConfigField "String", "ANALYTICS_TRACKING_ID", ANALYTICS_TRACKING_ID_RELEASE
        }

        releaseTest {
            initWith(buildTypes.debug)
            debuggable true
            applicationIdSuffix ".releaseTest"
            buildConfigField "String", "API_BASE_URL", "\"https://wheelmap.org\""
            buildConfigField "String", "WHEELMAP_API_KEY", WHEELMAP_API_KEY
            buildConfigField "String", "MAPBOX_API_KEY", MAPBOX_API_KEY
            buildConfigField "String", "HOCKEY_APP_ID", "\"" + module_properties.getProperty("HOCKEY_APP_ID_RELEASE_TEST") + "\""
            buildConfigField "String", "ANALYTICS_TRACKING_ID", ANALYTICS_TRACKING_ID_RELEASE
        }
    }

    flavorDimensions "tools"
    productFlavors {
        internal {
            dimension "tools"
        }

        production {
            dimension "tools"
        }
    }

}

buildTypeLauncherIcon {
    mipmap = false
}

repositories {

    flatDir {
        dirs 'libs'
    }

    flatDir {
        dirs '../libs_tango/aar'
    }

}

dependencies {

    compile 'com.android.support:multidex:1.0.1'

    compile fileTree(dir: 'libs', include: ['*.jar'])

    def android_support_version = "24.2.0"
    compile "com.android.support:appcompat-v7:${android_support_version}"
    androidTestCompile "com.android.support:appcompat-v7:${android_support_version}"
    compile "com.android.support:design:${android_support_version}"
    compile "com.android.support:cardview-v7:${android_support_version}"
    compile "com.android.support:transition:${android_support_version}"

    compile 'net.hockeyapp.android:HockeySDK:3.5.0'

    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'

    // http://mvnrepository.com/artifact/com.nostra13.universalimageloader/universal-image-loader/1.9.4
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'

    compile 'org.roboguice:roboguice:2.0'

    compile "org.apache.httpcomponents:httpmime:4.2.3"

    compile 'org.osmdroid:osmdroid-android:5.2'
    compile 'org.slf4j:slf4j-simple:1.6.1'

    compile 'de.akquinet.android.androlog:androlog:1.0.6'

    compile 'de.greenrobot:eventbus:2.4.0'

    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    compile 'com.nineoldandroids:library:2.4.0'

    def stetho_version = "1.3.1"
    compile "com.facebook.stetho:stetho:${stetho_version}"
    compile "com.facebook.stetho:stetho-okhttp3:${stetho_version}"

    // https://github.com/hotchemi/Android-Rate
    compile 'com.github.hotchemi:android-rate:0.5.6'

    compile('de.keyboardsurfer.android.widget:crouton:1.8.5@aar') {
        // exclusion is not necessary, but generally a good idea.
        exclude group: 'com.google.android', module: 'support-v4'
    }

    // Tango:
    compile 'org.rajawali3d:rajawali:1.1.668@aar'
    compile(name: 'tango_support_java_lib', ext: 'aar')
    compile(name: 'tango_ux_support_library', ext: 'aar')
    compile project(':tango_utils')
    compile group: 'com.vividsolutions', name: 'jts', version: '1.13'

    // API
    def okhttp_version = "3.4.1"
    compile "com.squareup.okhttp3:okhttp:${okhttp_version}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"

    def retrofit_version = "2.1.0"
    compile "com.squareup.retrofit2:retrofit:${retrofit_version}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofit_version}"

    // RxJava
    compile 'io.reactivex:rxjava:1.1.7'
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'com.jakewharton.rxrelay:rxrelay:1.2.0'

    // AutoValue
    def auto_value_version = "1.2"
    apt "com.google.auto.value:auto-value:${auto_value_version}"
    provided 'com.jakewharton.auto.value:auto-value-annotations:1.2-update1'
    apt 'com.ryanharter.auto.value:auto-value-parcel:0.2.3-rc1'
    apt 'com.ryanharter.auto.value:auto-value-gson:0.4.0'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.0'
    apt 'com.gabrielittner.auto.value:auto-value-with:1.0.0'

    compile 'com.google.android.gms:play-services-analytics:7.8.0'

    // Testing-only dependencies

    androidTestCompile('com.jayway.awaitility:awaitility:1.3.4'){
        exclude module : 'cglib-nodep'
        exclude group: 'com.hamcrest', module: 'hamcrest-core'
        exclude group: 'com.hamcrest', module: 'hamcrest-library'
    }
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.2'

    androidTestCompile 'tools.fastlane:screengrab:1.0.2',{
               exclude group: 'com.android.support', module: 'support-annotations'
    }

}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}
